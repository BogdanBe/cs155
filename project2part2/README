Attack A - XSS
--------------
# Only allow alphanumeric for username

+ index.php: added ctype_alnum checks
+ users.php: added ctype_alnum checks; added htmlspecialchars() for username

# Sanitize all reflect outputs with htmlspecialchars()

+ include/common.php: defined proprietary sanitize wrapper - htmlspecialchars($str, ENT_QUOTES, "UTF-8")
+ users.php: sanitize "user"
+ transfer.php: sanitize "zoobars", "recipient"



Attack B - CSRF
---------------
# Add CSRF token

+ transfer.php: added a session id to SESSION; use md5(sid) as submission token



Attack C - Clickjacking
-----------------------
# Better frame busting code

+ static/zoobar.css: set BODY to "display: none;"
+ include/buster.php: set "display: block;" when frame buster passes.
+ include/navigation.php: imports buster.php in every page.



Attack D - Stored XSS
---------------------

# Sanitize stored profile by striping all HTML tags

+ index.php: sanitize 'profile'

# Allow whitelisted tags

+ include/common.php: Added parser for [red], [b], [i], [p], [h1], [h2]... 
+ users.php: Apply parser to display profile with style



Attack E - attribute quotes
---------------------------

# Use double quotes for all HTML attributes that takes user input

+ index.php: added double quotes
